* reason
i have a hard time choosing a framework/technology, therefore decided to explore realworld.
- old ones are boring
- new ones are promising but rough around the edges
- the balance between widespread usage, adoptation, features & performance is difficult to find.
* enter realworld.io
- a good resource of arguably non-trivial reference implementations of the same functionality.
* what we'd like to compare
- code readability. subjective!
- terseness. lines of code
- reasonable extensibility, feature-wise
  - integration to 3rd party services
  - ease of development with client-side
- dogma. functional vs. procedure
- ease of development
  - hot reaload, built in debugger
* approach
- tests are excluded for loc comparison. more "static" and "pure" languages arguably require less tests, as compilation provides some of that.
* comparison
| implementation                     | persistence     | orm          | framework | db     |
|------------------------------------+-----------------+--------------+-----------+--------|
| node-express-realworld-example-app | mongodb         | mongoose     | express   |        |
| flask-realworld-example-app        | sqlite/postgres | sqlalchemy   | flask     |        |
| rails-realworld-example-app        |                 | activerecord |           | mysql  |
| django-realworld-example-app       |                 | django-model |           | sqlite |
